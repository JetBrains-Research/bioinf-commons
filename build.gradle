buildscript {
    ext.kotlin_version = '1.3.21'

    repositories {
        maven { url "https://cache-redirector.jetbrains.com/repo1.maven.org/maven2" }
        maven { url "https://cache-redirector.jetbrains.com/jcenter.bintray.com" }

        // In case of issues with cache redirector:
        // jcenter()
    }

    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:4.0.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id 'com.jfrog.bintray' version '1.8.1'
}

apply plugin: 'kotlin'
apply plugin: 'maven-publish'

sourceCompatibility = 1.8
targetCompatibility = sourceCompatibility
compileKotlin { kotlinOptions.jvmTarget = sourceCompatibility }
compileTestKotlin { kotlinOptions.jvmTarget = sourceCompatibility }

repositories {
    jcenter()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    compile 'org.jetbrains.kotlinx:kotlinx-support-jdk8:0.1'
    compile 'log4j:log4j:1.2.17'

    compile 'com.google.guava:guava:23.6.1-jre'
    compile 'org.apache.commons:commons-csv:1.4'
    compile 'com.google.code.gson:gson:2.7'
    compile 'net.sf.jopt-simple:jopt-simple:5.0.4'
    compile 'commons-net:commons-net:3.5'
    compile 'org.apache.httpcomponents:httpclient:4.5.6'
    compile 'org.jgrapht:jgrapht-core:0.9.2'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.8.11'
    compile 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.8.11'
    compile 'com.github.samtools:htsjdk:2.10.1'
    compile 'com.github.broadinstitute:picard:2.18.26'

    compile 'org.jetbrains.bio:big:0.8.4'
    compile 'org.jetbrains.bio:viktor:0.5.3'

    testCompile 'junit:junit:4.12'
    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
}

private String settingsFolder(final String propertyName, final String folderName) {
    if (!System.hasProperty(propertyName)) {
        return "${rootProject.buildDir}/.tests/$folderName"
    } else {
        return System.getProperty(propertyName)
    }
}

task generateTestOrganism(type: JavaExec, overwrite: true) {
    systemProperty "genomes.path", settingsFolder("genomes.path", "genomes")

    description "Generates sequences/indexes/genes/etc for test organism"
    configure {
        main = "org.jetbrains.bio.genome.TestOrganismDataGenerator"
        classpath = sourceSets.main.runtimeClasspath
        enableAssertions = true
        maxHeapSize = '1024m' // Not much RAM is available on TC agents
    }
}

tasks.withType(Test) {
    dependsOn 'generateTestOrganism'

    // Continue execution even if tests for some of the
    // sub-projects failed.
    ignoreFailures = true
    maxParallelForks = Runtime.runtime.availableProcessors()
    maxHeapSize = "1024m"

    testLogging.showStandardStreams = true
    
    systemProperty "genomes.path", settingsFolder("genomes.path", "genomes")
    systemProperty "experiments.path", settingsFolder("experiments.path", "experiments")
    systemProperty "teamcity.build.checkoutDir", System.getProperty("teamcity.build.checkoutDir")
}

test {
    systemProperty "genomes.path", settingsFolder("genomes.path", "genomes")

    include '**/*Test.class'
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}

publishing {
    group = groupId
    version = project.version

    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact sourcesJar
        }
    }
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.bintrayUser : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayKey') ? project.bintrayKey : System.getenv('BINTRAY_KEY')
    publications = ['mavenJava']
    pkg {
        repo = 'maven'
        name = 'bioinf-commons'
        userOrg = 'jetbrains-research'
        licenses = ['MIT']
        version {
            name = project.version.toString()
        }
    }
}

task wrapper(type: Wrapper, overwrite: true) {
    gradleVersion = '4.10'
}